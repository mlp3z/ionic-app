{"version":3,"sources":["./src/app/pages/agregar/agregar.page.html","./src/app/models/item.model.ts","./src/app/pages/agregar/agregar-routing.module.ts","./src/app/pages/agregar/agregar.module.ts","./src/app/pages/agregar/agregar.page.scss","./src/app/pages/agregar/agregar.page.ts"],"names":[],"mappings":"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","file":"agregar-agregar-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar color=\\\"dark\\\">\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/\\\" color=\\\"warning\\\"></ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-title>{{lista.titulo}}</ion-title>\\n\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\" color=\\\"medium\\\">\\n\\n    <!-- <ion-list *ngIf=\\\"!lista.fechaCompletada\\\"> -->\\n    <ion-list>\\n        <ion-item color=\\\"medium\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"closed\\\">Nuevo Item</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"nombreItem\\\" (keyup.enter)=\\\"agregarItem()\\\"></ion-input>\\n        </ion-item>\\n    </ion-list>\\n\\n    <ion-list>\\n\\n        <ion-list-header color=\\\"dark\\\" *ngIf=\\\"lista.items.length > 0\\\">\\n            <ion-label>Tareas por hacer</ion-label>\\n        </ion-list-header>\\n\\n        <ion-item-sliding *ngFor=\\\"let item of lista.items; index as i\\\" class=\\\"animated fadeInDown\\\">\\n\\n            <ion-item>\\n                <ion-checkbox slot=\\\"start\\\" color=\\\"success\\\" [(ngModel)]=\\\"item.completado\\\" (ionChange)=\\\"changeCheck(item)\\\"></ion-checkbox>\\n                <ion-label>{{item.descripcion}}</ion-label>\\n            </ion-item>\\n\\n            <ion-item-options side=\\\"end\\\">\\n                <ion-item-option color=\\\"danger\\\" (click)=\\\"eliminarItem(i)\\\">\\n                    <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon> -->\\n                    <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\n                    delete\\n                </ion-item-option>\\n            </ion-item-options>\\n\\n        </ion-item-sliding>\\n\\n    </ion-list>\\n\\n\\n</ion-content>\\n\\n<!-- \\n<ion-item-sliding>\\n    <ion-item-options side=\\\"start\\\">\\n        <ion-item-option (click)=\\\"favorite(item)\\\">Favorite</ion-item-option>\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"share(item)\\\">Share</ion-item-option>\\n    </ion-item-options>\\n\\n    <ion-item>\\n        <ion-label>Item Options</ion-label>\\n    </ion-item>\\n\\n    <ion-item-options side=\\\"end\\\">\\n        <ion-item-option (click)=\\\"unread(item)\\\">Unread</ion-item-option>\\n    </ion-item-options>\\n</ion-item-sliding>\\n -->\\n\\n<!-- \\n<ion-item-sliding>\\n    <ion-item-options side=\\\"start\\\">\\n        <ion-item-option color=\\\"danger\\\" expandable>\\n            Delete\\n        </ion-item-option>\\n    </ion-item-options>\\n\\n    <ion-item>\\n        <ion-label>Expandable Options</ion-label>\\n    </ion-item>\\n\\n    <ion-item-options side=\\\"end\\\">\\n        <ion-item-option color=\\\"tertiary\\\" expandable>\\n            Archive\\n        </ion-item-option>\\n    </ion-item-options>\\n</ion-item-sliding>\\n -->\";","export class Item {\n\n    descripcion:string;\n    completado:boolean;\n\n    constructor(descripcion:string) {\n        this.descripcion = descripcion;\n        this.completado = false;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AgregarPage } from './agregar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AgregarPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AgregarPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AgregarPageRoutingModule } from './agregar-routing.module';\n\nimport { AgregarPage } from './agregar.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AgregarPageRoutingModule\n  ],\n  declarations: [AgregarPage]\n})\nexport class AgregarPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FncmVnYXIvYWdyZWdhci5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Item } from 'src/app/models/item.model';\nimport { Lista } from 'src/app/models/lista.model';\nimport { TodoService } from 'src/app/services/todo.service';\n\n@Component({\n  selector: 'app-agregar',\n  templateUrl: './agregar.page.html',\n  styleUrls: ['./agregar.page.scss'],\n})\nexport class AgregarPage{\n\n    lista:Lista;\n    nombreItem:string;\n\n    constructor(\n        private todoService:TodoService,\n        private activatedRoute:ActivatedRoute\n    ) { \n\n        const listaId = this.activatedRoute.snapshot.paramMap.get('listaId')\n\n        this.lista = this.todoService.obtenerLista(listaId);\n\n        // console.log(this.lista)\n    }\n\n    agregarItem(){\n        \n        if(this.nombreItem.length === 0){\n            return;\n        }\n\n        const nuevoItem = new Item(this.nombreItem);\n\n        this.lista.items.push(nuevoItem);\n\n        this.nombreItem = '';\n\n        this.todoService.guardarStorage();\n    }\n\n\n    changeCheck(item:Item){\n        \n        // console.log(item);\n\n        const countPendientes = this.lista.items.filter(x=>!x.completado).length;\n        // console.log({countPendientes});\n\n        if(countPendientes === 0){\n            this.lista.fechaCompletada = new Date();\n            this.lista.terminada = true;\n        }\n        else{\n            this.lista.fechaCompletada = null;\n            this.lista.terminada = false;\n        }\n\n        this.todoService.guardarStorage();\n    }\n\n\n    eliminarItem(index:number){\n        // console.log(index);\n        this.lista.items.splice(index,1);\n        this.todoService.guardarStorage();\n    }\n\n\n\n}\n"],"sourceRoot":"webpack:///"}