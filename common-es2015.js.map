{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js","./src/app/components/listas/listas.component.html","./src/app/components/components.module.ts","./src/app/components/listas/listas.component.ts","./src/app/models/lista.model.ts","./src/app/services/todo.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,kCAAkC,MAAM,UAAU;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACtCrF;AAAe,6IAA8E,qaAAqa,cAAc,kIAAkI,oBAAoB,gJAAgJ,6CAA6C,mdAA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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-list>\\n\\n    <ion-item-sliding *ngFor=\\\"let lista of todoService.listas; index as i\\\" class=\\\"animated fadeInDown\\\">\\n\\n        <ion-item detail color=\\\"light\\\" (click)=\\\"verLista(lista)\\\">\\n\\n            <ion-label>\\n                <ion-icon *ngIf=\\\"tabName=='tab1'\\\" slot=\\\"start\\\" name=\\\"clipboard-outline\\\" color=\\\"warning\\\"></ion-icon>\\n                <ion-icon *ngIf=\\\"tabName=='tab2'\\\" slot=\\\"start\\\" name=\\\"shield-checkmark-outline\\\" color=\\\"success\\\"></ion-icon>\\n                {{lista.titulo}}\\n            </ion-label>\\n\\n            <ion-note *ngIf=\\\"tabName=='tab1'\\\" slot=\\\"end\\\" color=\\\"tertiary\\\">\\n                {{lista.items.length}} items\\n            </ion-note>\\n            <ion-note *ngIf=\\\"tabName=='tab2'\\\" slot=\\\"end\\\" color=\\\"tertiary\\\">\\n                Fecha Fin: {{lista.fechaCompletada | date: 'dd/MM/yyyy' }}\\n            </ion-note>\\n\\n        </ion-item>\\n\\n        <ion-item-options side=\\\"end\\\">\\n            <ion-item-option color=\\\"danger\\\" (click)=\\\"eliminarLista(lista)\\\">\\n                <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon> -->\\n                <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\n                delete\\n            </ion-item-option>\\n        </ion-item-options>\\n\\n    </ion-item-sliding>\\n\\n</ion-list>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListasComponent } from './listas/listas.component';\n\n@NgModule({\n  declarations: [\n      ListasComponent\n  ],\n  exports:[\n    ListasComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ComponentsModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Lista } from 'src/app/models/lista.model';\nimport { TodoService } from 'src/app/services/todo.service';\n\n@Component({\n  selector: 'app-listas',\n  templateUrl: './listas.component.html',\n  styles: [],\n})\nexport class ListasComponent implements OnInit {\n\n    @Input() tabName:string;\n\n    constructor(\n        public todoService: TodoService,\n        private router: Router\n    ) { \n\n        // console.log(this.tabName);\n    }\n    ngOnInit() {}\n\n\n    verLista(lista:Lista){\n        // console.log(lista)\n        this.router.navigateByUrl(`tabs/${this.tabName}/agregar/${lista.id}`);\n    }\n\n    eliminarLista(lista:Lista){\n        this.todoService.eliminarLista(lista);\n    }\n\n}\n","import { Item } from './item.model';\r\n\r\nexport class Lista{\r\n\r\n    id:number;\r\n    titulo:string;\r\n    fechaCreacion:Date;\r\n    fechaCompletada:Date;\r\n    terminada:boolean;\r\n    items: Item[];\r\n\r\n    constructor(titulo:string,){\r\n\r\n        this.id = new Date().getTime();\r\n\r\n        this.titulo = titulo;\r\n        this.fechaCreacion= new Date();\r\n        this.fechaCompletada= null;\r\n        this.items = [];\r\n        \r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { Lista } from '../models/lista.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n    listas: Lista[] = [];\n\n    constructor() { \n        // console.log('constructor TodoService')\n\n        // const lista1 = new Lista('estudiar tech backend');\n        // const lista2 = new Lista('estudiar tech fronted');\n        // this.listas.push(lista1,lista2);\n        // console.log(this.listas);\n\n        this.cargarStorage();\n    }\n\n    guardarStorage(){\n        localStorage.setItem('ionic-app-data', JSON.stringify(this.listas));\n    }\n\n    cargarStorage(){\n\n        if(localStorage.getItem('ionic-app-data'))\n            this.listas = JSON.parse(localStorage.getItem('ionic-app-data'))\n    }\n\n\n\n    crearLista(titulo:string){\n\n        const nuevaLista = new Lista(titulo);\n        this.listas.push(nuevaLista);\n        this.guardarStorage();\n\n        return nuevaLista.id;\n    }\n\n    obtenerLista(id:string|number){\n\n        id = Number(id);\n\n        let listaSearch = this.listas.find( x => x.id === id );\n\n        return listaSearch;\n    }\n\n\n    eliminarLista(lista:Lista){\n\n        this.listas = this.listas.filter(x => x.id != lista.id);\n        this.guardarStorage();\n    }\n    \n\n\n\n}\n"],"sourceRoot":"webpack:///"}