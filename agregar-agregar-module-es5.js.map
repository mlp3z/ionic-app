{"version":3,"sources":["webpack:///src/app/pages/agregar/agregar.page.html","webpack:///src/app/models/item.model.ts","webpack:///src/app/pages/agregar/agregar-routing.module.ts","webpack:///src/app/pages/agregar/agregar.module.ts","webpack:///src/app/pages/agregar/agregar.page.scss","webpack:///src/app/pages/agregar/agregar.page.ts"],"names":["Item","descripcion","completado","routes","path","component","AgregarPageRoutingModule","imports","forChild","exports","AgregarPageModule","declarations","AgregarPage","todoService","activatedRoute","listaId","snapshot","paramMap","get","lista","obtenerLista","nombreItem","length","nuevoItem","items","push","guardarStorage","item","countPendientes","filter","x","fechaCompletada","Date","terminada","index","splice","selector","template"],"mappings":"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","file":"agregar-agregar-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar color=\\\"dark\\\">\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/\\\" color=\\\"warning\\\"></ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-title>{{lista.titulo}}</ion-title>\\n\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\" color=\\\"medium\\\">\\n\\n    <!-- <ion-list *ngIf=\\\"!lista.fechaCompletada\\\"> -->\\n    <ion-list>\\n        <ion-item color=\\\"medium\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"closed\\\">Nuevo Item</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"nombreItem\\\" (keyup.enter)=\\\"agregarItem()\\\"></ion-input>\\n        </ion-item>\\n    </ion-list>\\n\\n    <ion-list>\\n\\n        <ion-list-header color=\\\"dark\\\" *ngIf=\\\"lista.items.length > 0\\\">\\n            <ion-label>Tareas por hacer</ion-label>\\n        </ion-list-header>\\n\\n        <ion-item-sliding *ngFor=\\\"let item of lista.items; index as i\\\" class=\\\"animated fadeInDown\\\">\\n\\n            <ion-item>\\n                <ion-checkbox slot=\\\"start\\\" color=\\\"success\\\" [(ngModel)]=\\\"item.completado\\\" (ionChange)=\\\"changeCheck(item)\\\"></ion-checkbox>\\n                <ion-label>{{item.descripcion}}</ion-label>\\n            </ion-item>\\n\\n            <ion-item-options side=\\\"end\\\">\\n                <ion-item-option color=\\\"danger\\\" (click)=\\\"eliminarItem(i)\\\">\\n                    <!-- <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon> -->\\n                    <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\n                    delete\\n                </ion-item-option>\\n            </ion-item-options>\\n\\n        </ion-item-sliding>\\n\\n    </ion-list>\\n\\n\\n</ion-content>\\n\\n<!-- \\n<ion-item-sliding>\\n    <ion-item-options side=\\\"start\\\">\\n        <ion-item-option (click)=\\\"favorite(item)\\\">Favorite</ion-item-option>\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"share(item)\\\">Share</ion-item-option>\\n    </ion-item-options>\\n\\n    <ion-item>\\n        <ion-label>Item Options</ion-label>\\n    </ion-item>\\n\\n    <ion-item-options side=\\\"end\\\">\\n        <ion-item-option (click)=\\\"unread(item)\\\">Unread</ion-item-option>\\n    </ion-item-options>\\n</ion-item-sliding>\\n -->\\n\\n<!-- \\n<ion-item-sliding>\\n    <ion-item-options side=\\\"start\\\">\\n        <ion-item-option color=\\\"danger\\\" expandable>\\n            Delete\\n        </ion-item-option>\\n    </ion-item-options>\\n\\n    <ion-item>\\n        <ion-label>Expandable Options</ion-label>\\n    </ion-item>\\n\\n    <ion-item-options side=\\\"end\\\">\\n        <ion-item-option color=\\\"tertiary\\\" expandable>\\n            Archive\\n        </ion-item-option>\\n    </ion-item-options>\\n</ion-item-sliding>\\n -->\";","export class Item {\n\n    descripcion:string;\n    completado:boolean;\n\n    constructor(descripcion:string) {\n        this.descripcion = descripcion;\n        this.completado = false;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AgregarPage } from './agregar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AgregarPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AgregarPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AgregarPageRoutingModule } from './agregar-routing.module';\n\nimport { AgregarPage } from './agregar.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AgregarPageRoutingModule\n  ],\n  declarations: [AgregarPage]\n})\nexport class AgregarPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FncmVnYXIvYWdyZWdhci5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Item } from 'src/app/models/item.model';\nimport { Lista } from 'src/app/models/lista.model';\nimport { TodoService } from 'src/app/services/todo.service';\n\n@Component({\n  selector: 'app-agregar',\n  templateUrl: './agregar.page.html',\n  styleUrls: ['./agregar.page.scss'],\n})\nexport class AgregarPage{\n\n    lista:Lista;\n    nombreItem:string;\n\n    constructor(\n        private todoService:TodoService,\n        private activatedRoute:ActivatedRoute\n    ) { \n\n        const listaId = this.activatedRoute.snapshot.paramMap.get('listaId')\n\n        this.lista = this.todoService.obtenerLista(listaId);\n\n        // console.log(this.lista)\n    }\n\n    agregarItem(){\n        \n        if(this.nombreItem.length === 0){\n            return;\n        }\n\n        const nuevoItem = new Item(this.nombreItem);\n\n        this.lista.items.push(nuevoItem);\n\n        this.nombreItem = '';\n\n        this.todoService.guardarStorage();\n    }\n\n\n    changeCheck(item:Item){\n        \n        // console.log(item);\n\n        const countPendientes = this.lista.items.filter(x=>!x.completado).length;\n        // console.log({countPendientes});\n\n        if(countPendientes === 0){\n            this.lista.fechaCompletada = new Date();\n            this.lista.terminada = true;\n        }\n        else{\n            this.lista.fechaCompletada = null;\n            this.lista.terminada = false;\n        }\n\n        this.todoService.guardarStorage();\n    }\n\n\n    eliminarItem(index:number){\n        // console.log(index);\n        this.lista.items.splice(index,1);\n        this.todoService.guardarStorage();\n    }\n\n\n\n}\n"]}